//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-147 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.03.23 at 11:48:17 AM EDT 
//


package com.selman.calcfocus.request;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for PaymentMethod.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="PaymentMethod">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="DirectBill"/>
 *     &lt;enumeration value="ElectronicFundTransfer"/>
 *     &lt;enumeration value="CreditCard"/>
 *     &lt;enumeration value="ListBill"/>
 *     &lt;enumeration value="NoBilling"/>
 *     &lt;enumeration value="OnWaiver"/>
 *     &lt;enumeration value="AutomaticPremiumLoan"/>
 *     &lt;enumeration value="AutomaticPremiumOffset"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "PaymentMethod")
@XmlEnum
public enum PaymentMethod {

    @XmlEnumValue("DirectBill")
    DIRECT_BILL("DirectBill"),
    @XmlEnumValue("ElectronicFundTransfer")
    ELECTRONIC_FUND_TRANSFER("ElectronicFundTransfer"),
    @XmlEnumValue("CreditCard")
    CREDIT_CARD("CreditCard"),
    @XmlEnumValue("ListBill")
    LIST_BILL("ListBill"),
    @XmlEnumValue("NoBilling")
    NO_BILLING("NoBilling"),
    @XmlEnumValue("OnWaiver")
    ON_WAIVER("OnWaiver"),
    @XmlEnumValue("AutomaticPremiumLoan")
    AUTOMATIC_PREMIUM_LOAN("AutomaticPremiumLoan"),
    @XmlEnumValue("AutomaticPremiumOffset")
    AUTOMATIC_PREMIUM_OFFSET("AutomaticPremiumOffset");
    private final String value;

    PaymentMethod(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static PaymentMethod fromValue(String v) {
        for (PaymentMethod c: PaymentMethod.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
