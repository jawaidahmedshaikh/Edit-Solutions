//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-147 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.03.23 at 11:48:17 AM EDT 
//


package com.selman.calcfocus.request;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for PaymentMode.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="PaymentMode">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Annual"/>
 *     &lt;enumeration value="SemiAnnual"/>
 *     &lt;enumeration value="Quarterly"/>
 *     &lt;enumeration value="Monthly"/>
 *     &lt;enumeration value="FourWeekly"/>
 *     &lt;enumeration value="Semimonthly"/>
 *     &lt;enumeration value="Biweekly"/>
 *     &lt;enumeration value="Weekly"/>
 *     &lt;enumeration value="Eigthly"/>
 *     &lt;enumeration value="Ninthly"/>
 *     &lt;enumeration value="NinthlySemi"/>
 *     &lt;enumeration value="NinthlyFourTimes"/>
 *     &lt;enumeration value="Tenthly"/>
 *     &lt;enumeration value="TenthlySemi"/>
 *     &lt;enumeration value="TenthlyFourTimes"/>
 *     &lt;enumeration value="Eleventhly"/>
 *     &lt;enumeration value="FourtyEightAYear"/>
 *     &lt;enumeration value="SinglePay"/>
 *     &lt;enumeration value="None"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "PaymentMode")
@XmlEnum
public enum PaymentMode {

    @XmlEnumValue("Annual")
    ANNUAL("Annual"),
    @XmlEnumValue("SemiAnnual")
    SEMI_ANNUAL("SemiAnnual"),
    @XmlEnumValue("Quarterly")
    QUARTERLY("Quarterly"),
    @XmlEnumValue("Monthly")
    MONTHLY("Monthly"),
    @XmlEnumValue("FourWeekly")
    FOUR_WEEKLY("FourWeekly"),
    @XmlEnumValue("Semimonthly")
    SEMIMONTHLY("Semimonthly"),
    @XmlEnumValue("Biweekly")
    BIWEEKLY("Biweekly"),
    @XmlEnumValue("Weekly")
    WEEKLY("Weekly"),
    @XmlEnumValue("Eigthly")
    EIGTHLY("Eigthly"),
    @XmlEnumValue("Ninthly")
    NINTHLY("Ninthly"),
    @XmlEnumValue("NinthlySemi")
    NINTHLY_SEMI("NinthlySemi"),
    @XmlEnumValue("NinthlyFourTimes")
    NINTHLY_FOUR_TIMES("NinthlyFourTimes"),
    @XmlEnumValue("Tenthly")
    TENTHLY("Tenthly"),
    @XmlEnumValue("TenthlySemi")
    TENTHLY_SEMI("TenthlySemi"),
    @XmlEnumValue("TenthlyFourTimes")
    TENTHLY_FOUR_TIMES("TenthlyFourTimes"),
    @XmlEnumValue("Eleventhly")
    ELEVENTHLY("Eleventhly"),
    @XmlEnumValue("FourtyEightAYear")
    FOURTY_EIGHT_A_YEAR("FourtyEightAYear"),
    @XmlEnumValue("SinglePay")
    SINGLE_PAY("SinglePay"),
    @XmlEnumValue("None")
    NONE("None");
    private final String value;

    PaymentMode(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static PaymentMode fromValue(String v) {
        for (PaymentMode c: PaymentMode.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
