//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-147 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.03.23 at 11:48:47 AM EDT 
//


package com.selman.calcfocus.response;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for PolicyAdminStatus.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="PolicyAdminStatus">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Pending"/>
 *     &lt;enumeration value="Active"/>
 *     &lt;enumeration value="PreLapse"/>
 *     &lt;enumeration value="Lapsed"/>
 *     &lt;enumeration value="Terminated"/>
 *     &lt;enumeration value="NonForfeiture"/>
 *     &lt;enumeration value="OnWaiver"/>
 *     &lt;enumeration value="Matured"/>
 *     &lt;enumeration value="FundPay"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "PolicyAdminStatus")
@XmlEnum
public enum PolicyAdminStatus {

    @XmlEnumValue("Pending")
    PENDING("Pending"),
    @XmlEnumValue("Active")
    ACTIVE("Active"),
    @XmlEnumValue("PreLapse")
    PRE_LAPSE("PreLapse"),
    @XmlEnumValue("Lapsed")
    LAPSED("Lapsed"),
    @XmlEnumValue("Terminated")
    TERMINATED("Terminated"),
    @XmlEnumValue("NonForfeiture")
    NON_FORFEITURE("NonForfeiture"),
    @XmlEnumValue("OnWaiver")
    ON_WAIVER("OnWaiver"),
    @XmlEnumValue("Matured")
    MATURED("Matured"),
    @XmlEnumValue("FundPay")
    FUND_PAY("FundPay");
    private final String value;

    PolicyAdminStatus(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static PolicyAdminStatus fromValue(String v) {
        for (PolicyAdminStatus c: PolicyAdminStatus.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
