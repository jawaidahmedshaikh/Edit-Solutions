//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.02.16 at 02:52:13 PM EST 
//


package com.selman.calcfocus.response;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for InterestAssumption.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="InterestAssumption">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Current"/>
 *     &lt;enumeration value="MidPoint"/>
 *     &lt;enumeration value="Guaranteed"/>
 *     &lt;enumeration value="InitialPeriodGuaranteeFixedThereafterInput"/>
 *     &lt;enumeration value="InitialPeriodGuaranteeFixedThereafterRate"/>
 *     &lt;enumeration value="InputFromRequest"/>
 *     &lt;enumeration value="Input"/>
 *     &lt;enumeration value="Alternate"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "InterestAssumption")
@XmlEnum
public enum InterestAssumption {

    @XmlEnumValue("Current")
    CURRENT("Current"),
    @XmlEnumValue("MidPoint")
    MID_POINT("MidPoint"),
    @XmlEnumValue("Guaranteed")
    GUARANTEED("Guaranteed"),
    @XmlEnumValue("InitialPeriodGuaranteeFixedThereafterInput")
    INITIAL_PERIOD_GUARANTEE_FIXED_THEREAFTER_INPUT("InitialPeriodGuaranteeFixedThereafterInput"),
    @XmlEnumValue("InitialPeriodGuaranteeFixedThereafterRate")
    INITIAL_PERIOD_GUARANTEE_FIXED_THEREAFTER_RATE("InitialPeriodGuaranteeFixedThereafterRate"),
    @XmlEnumValue("InputFromRequest")
    INPUT_FROM_REQUEST("InputFromRequest"),
    @XmlEnumValue("Input")
    INPUT("Input"),
    @XmlEnumValue("Alternate")
    ALTERNATE("Alternate");
    private final String value;

    InterestAssumption(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static InterestAssumption fromValue(String v) {
        for (InterestAssumption c: InterestAssumption.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
